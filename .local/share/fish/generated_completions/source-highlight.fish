# source-highlight
# Autogenerated from man page /usr/share/man/man1/source-highlight.1.gz
complete -c source-highlight -s h -l help -d 'Print help and exit'
complete -c source-highlight -l detailed-help -d 'Print help, including all details and hidden options, and exit'
complete -c source-highlight -s V -l version -d 'Print version and exit'
complete -c source-highlight -s i -l input -d 'Input file (default=stdin)'
complete -c source-highlight -s o -l output -d 'Output file (default=stdout, when the third invocation form is used)'
complete -c source-highlight -s s -l src-lang -d 'source language (use --lang-list to get the complete list)'
complete -c source-highlight -l lang-list -d 'list all the supported language and associated language definition file'
complete -c source-highlight -l outlang-list -d 'list all the supported output language and associated language definition file'
complete -c source-highlight -s f -l out-format -d 'output format (use --outlang-list to get the complete list)  (default=`html\')'
complete -c source-highlight -s d -l doc -d 'create an output file that can be used as a stand alone document (e. g'
complete -c source-highlight -l no-doc -d 'cancel the --doc option even if it is implied (e. g. , when css is given)'
complete -c source-highlight -s c -l css -d 'the external style sheet filename.   Implies --doc'
complete -c source-highlight -s T -l title -d 'give a title to the output document.   Implies --doc'
complete -c source-highlight -s t -l tab -d 'specify tab length.   (default=`8\')'
complete -c source-highlight -s H -l header -d 'file to insert as header'
complete -c source-highlight -s F -l footer -d 'file to insert as footer'
complete -c source-highlight -l style-file -d 'specify the file containing format options (default=`default. style\')'
complete -c source-highlight -l style-css-file -d 'css syntax)'
complete -c source-highlight -l style-defaults -d 'options  (default=`style. defaults\')'
complete -c source-highlight -l outlang-def -d 'output language definition file'
complete -c source-highlight -l outlang-map -d 'output language map file (default=`outlang. map\')'
complete -c source-highlight -l data-dir -d 'directory where language definition files and language maps are searched for'
complete -c source-highlight -l output-dir -d 'output directory'
complete -c source-highlight -l lang-def -d 'language definition file'
complete -c source-highlight -l lang-map -d 'language map file  (default=`lang. map\')'
complete -c source-highlight -l show-lang-elements -d 'prints the language elements that are defined P in the language definition fi…'
complete -c source-highlight -l infer-lang -d 'force to infer source script language (overriding given language specificatio…'
complete -c source-highlight -s n -l line-number -d 'number all output lines, using the specified padding character  (default=`0\')'
complete -c source-highlight -l line-number-ref -d 'number all output lines and generate an anchor,'
complete -c source-highlight -l line-range -d 'generate only the lines in the specified range(s)'
complete -c source-highlight -l range-separator -d 'the optional separator to be printed among ranges (e. g. , ". ")'
complete -c source-highlight -l range-context -d 'number of (context) lines generated even if not in range P Mode: regexrange P…'
complete -c source-highlight -l regex-range -d 'generate only the lines within the specified regular expressions '
complete -c source-highlight -l gen-references -d 'generate references  (possible values="inline", "postline", "postdoc" default…'
complete -c source-highlight -l ctags-file -d 'specify the file generated by ctags that will be used to generate references …'
complete -c source-highlight -l ctags -d 'how to run the ctags command'
complete -c source-highlight -s v -l verbose -d 'verbose mode on'
complete -c source-highlight -s q -l quiet -d 'print no progress information'
complete -c source-highlight -l binary-output -d 'write output files in binary mode'
complete -c source-highlight -l statistics -d 'print some statistics (i. e. , elapsed time)'
complete -c source-highlight -l gen-version -d 'put source-highlight version in the generated file  (default=on)'
complete -c source-highlight -l check-lang -d 'only check the correctness of a language definition file'
complete -c source-highlight -l check-outlang -d 'only check the correctness of an output language definition file'
complete -c source-highlight -l failsafe -d 'if no language definition is found for the input, it is simply copied to the …'
complete -c source-highlight -s g -l debug-langdef -d 'debug a language definition'
complete -c source-highlight -l tag-relative -d testing:
complete -c source-highlight -l show-regex -d 'show the regular expression automaton corresponding to a language definition …'

